name: test-and-release

on:
  push:
    branches: [ main ]
    tags:     [ 'v*' ]
  pull_request:

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

jobs:
  test:
    name: Test on Ruby ${{ matrix.ruby }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        ruby: [ '2.7', '3.0', '3.1' ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - if: matrix.os == 'windows-latest' && matrix.ruby != '3.1'
        run: pacman --noconfirm -S mingw-w64-x86_64-libpng

      - if: matrix.os == 'windows-latest' && matrix.ruby == '3.1'
        run: pacman --noconfirm -S mingw-w64-ucrt-x86_64-libpng

      - run: gem update bundler
      - run: bundle install
      - run: bundle exec rake spec

  package:
    name: Package ${{ matrix.os }}, ${{ matrix.ruby }}, ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: any
            ruby: '2.7'
          - os: ubuntu-latest
            platform: x86_64-linux
            ruby: '2.7'
          - os: windows-latest
            platform: w64-mingw32
            ruby: '2.7'
          - os: windows-latest
            platform: w64-mingw-ucrt
            ruby: '3.1'
          - os: macos-latest
            platform: x86_64-darwin
            ruby: '2.7'
          - os: ubuntu-latest
            platform: aarch64-linux
            ruby: '2.7'
          - os: macos-latest
            platform: arm64-darwin
            ruby: '2.7'
    steps:
      - uses: actions/checkout@v3

      - if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.platform, 'aarch64')
        run: |
          sudo apt-get update
          sudo apt-get install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu binutils-aarch64-linux-gnu
          sudo dpkg --add-architecture arm64
          wget http://ports.ubuntu.com/pool/main/z/zlib/zlib1g-dev_1.2.11.dfsg-2ubuntu1.3_arm64.deb
          dpkg -x zlib1g-dev_1.2.11.dfsg-2ubuntu1.3_arm64.deb zli

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: false

      - if: matrix.os == 'windows-latest' && matrix.ruby != '3.1'
        run: pacman --noconfirm -S mingw-w64-x86_64-libpng

      - if: matrix.os == 'windows-latest' && matrix.ruby == '3.1'
        run: pacman --noconfirm -S mingw-w64-ucrt-x86_64-libpng

      - run: gem update bundler
      - run: bundle install
      - run: bundle exec rake gem:native:${{ matrix.platform }}

      - uses: actions/upload-artifact@v2
        with:
          name: pkg
          path: pkg/*.gem

  test-build-binary:
    needs: package
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        ruby: [ '2.7', '3.0', '3.1' ]

    steps:
    - uses: actions/checkout@v3

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}

    - uses: actions/download-artifact@v2
      with:
        name: pkg
        path: pkg

    - name: Install binary gem
      run: gem install -b pkg/pngcheck-$(ruby -I lib -r pngcheck/version -e "puts PngCheck::VERSION")-$(ruby -e "puts RUBY_PLATFORM.sub(/darwin\d{2}$/, 'darwin')").gem
# MacOS with have something like arm64-darwin19, others just aarch64-linux
    - name: Test
      run:  ruby -remf2svg -e "PngCheck.check_file('spec/examples/correct.png')"

  test-build-any:
    needs: package
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        ruby: [ '2.7', '3.0', '3.1' ]

    steps:
    - uses: actions/checkout@v3

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}

    - uses: actions/download-artifact@v2
      with:
        name: pkg
        path: pkg

    - name: Install native gem
      run: gem install -b pkg/pngcheck-$(ruby -I lib -r pngcheck/version -e "puts PngCheck::VERSION").gem

    - name: Test
      run:  ruby -remf2svg -e "PngCheck.check_file('spec/examples/correct.png')"

  release:
    name: Release gem
    needs: [ test, test-build-binary, test-build-any ]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3

      - uses: cadwallion/publish-rubygems-action@master
        env:
          RUBYGEMS_API_KEY: ${{secrets.METANORMA_CI_RUBYGEMS_API_KEY}}
